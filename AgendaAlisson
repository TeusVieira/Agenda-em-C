#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

#define TAM_NOME 100
#define TAM_VET 100


    typedef struct agenda
 {
     char nome_contato [ TAM_NOME ];
     char endereco [300];
     int tipo_endereco;
     int numero_endereco;
     char telefone [ 12 ];
     int tipo_telefone;
     char email [ 200 ];
     char rede_social[100];
     char tipo_de_rede;
 } contato ;


void adicionarContatos( contato usuario[100], int *i);
void listarContatos( contato usuario[100], int *i);
void alterarContatos(contato usuario[], int i);
void excluirContatos(contato usuario);
void gravarArquivo(contato usuario[100], int nContatos);

int main( ){
 
    setlocale(LC_ALL,"");

        int opcao;
        int total = lerArquivo();
        contato usuario[100];


 // laço para o Usuï¿½rio decidir o que o codigo ira executar
do{
    
        printf("------------------------------------------\n");
        printf("- 1. Listar Contatos:                    -\n");
        printf("- 2. Adicionar Contato:                  -\n");
        printf("- 3. Alterar Contato:                    -\n");
        printf("- 4. Excluir Contato:                    -\n");
        printf("- 5. Salvar:                             -\n");
        printf("- 0. Sair:                               -\n");
        printf("------------------------------------------\n");

        scanf("%i", &opcao);

    switch (opcao)
    {

    case 1:
        listarContatos(usuario, &total);
        break;

    case 2:
         adicionarContatos(usuario, &total);
        break;

    case 3:
        alterarContatos(usuario, total);
        break;

    case 4:
        excluirContatos(usuario[total]);
        break;
    
    case 5:
        gravarArquivo(usuario, total);
        break;

    case 0:
        printf("------------------------------------------\n");
        printf("-SAINDO ,_,                              -\n");
        printf("------------------------------------------\n");
        break;

    default:
        printf("------------------------------------------\n");
        printf("- Essa Opção não Existe.                 -\n");
        printf("------------------------------------------\n");
        break;

    }


}while(opcao != 0);

    return 0;

}


void adicionarContatos( contato usuario[100], int *i)
{
    setlocale(LC_ALL,"");
    printf(" ... ADICIONANDO CONTATO.\n");

    
    printf(" - NOME DO CONTATO: \n");
    fflush(stdin);
    scanf("%[^\n]s", &usuario[*i].nome_contato);

    printf(" - ENDEREÇO: \n");
    fflush(stdin);
    scanf("%[^\n]s", &usuario[*i].endereco);

    printf(" - NUMERO: \n");
    fflush(stdin);
    scanf("%[^\n]s", &usuario[*i].telefone);

    printf(" - E-MAIL: \n");
    fflush(stdin);
    scanf("%[^\n]s", &usuario[*i].email);

    printf(" - REDE SOCIAL: \n");
    fflush(stdin);
    scanf("%[^\n]s", &usuario[*i].rede_social);


    (*i)++;


}


void listarContatos(contato usuario[100], int *numeros_contatos)
{

    char dados [200];
    FILE *prtArquivo = NULL;
    prtArquivo = fopen ("agendinha-da-depressaum.txt", "r");
    // laço para ler o arquivo e mostrar todos os contatos salvos.
    //for (int j = 0; j < *numeros_contatos; j++){
    while ( !feof (prtArquivo) ){
        fgets ( dados, 199, prtArquivo );
        if (strlen(dados) > 0)
            printf("%s", dados);
        strcpy (dados, "" );

        //fscanf(prtArquivo, "")
        
        }
    
    fclose(prtArquivo);
    prtArquivo = NULL;

}


void alterarContatos(contato usuario[], int i)
{

    int usuario_para_alterar = 0, quant_usuarios_do_arq = 0;
    contato usuario_alterar;
    char confimar_acao, dados[200], pt;


    char linha[200];

    FILE *arquivo = NULL;
    arquivo = fopen("agendinha-da-depressaum.txt","a");

  


    // while (!feof(arquivo))
    // {
    //     fgets(dados,199, arquivo);
    //     if(strlen(dados) > 0)
    //     {
    //       strcpy(dados, "");
    //       pt = strtok(dados, "");
    //         while()
    //         {
    //             for(int i = 0;i < 199; i++)
    //             {
                    
    //             }
    //         }
            
    //     }
    // }
    

    do
    {
        printf("Qual Contato deseja Alterar? \n");
        scanf("%i", &usuario_para_alterar);

        if ( usuario_para_alterar >= quant_usuarios_do_arq )
        {
            printf ( "Usuario inexistente. Informe valor entre 0 e %i:", i );
        }
        
    } while (usuario_para_alterar > 0 && usuario_para_alterar > quant_usuarios_do_arq);
    

        printf("NOME: \n");
        fflush(stdin);
        scanf("%[^\n]s", usuario_alterar.nome_contato);
        printf("TELEFONE: \n");
        fflush(stdin);
        scanf("%i", &usuario_alterar.telefone);
        printf("EMAIL: \n");
        fflush(stdin);
        scanf("%[^\n]s", usuario_alterar.email);
        printf("ENDEREÇO: \n");
        fflush(stdin);
        scanf("%[^\n]s", usuario_alterar.endereco);
        printf("REDE SOCIAL: \n");
        fflush(stdin);
        scanf("%[^\n]s", usuario_alterar.rede_social);

    //laço para confimar se o usuario quer mesmo trocar as informações, se sim, ele troca e se não, mantêm as informaïçoes antigas.


    printf("Deseja Confirmar ?? (S/N)");
    
    
    fflush(stdin);
    scanf("%c", &confimar_acao);
    confimar_acao = tolower(confimar_acao);
    
        if(confimar_acao == 's'){
            printf("DEU BOOM, MEU REI \n");

        // (troca de informações
         strcpy ( usuario[usuario_para_alterar].nome_contato, usuario_alterar.nome_contato );
         strcpy ( usuario[usuario_para_alterar].telefone, usuario_alterar.telefone );
         strcpy ( usuario[usuario_para_alterar].email, usuario_alterar.email );
         strcpy ( usuario[usuario_para_alterar].endereco, usuario_alterar.endereco) ;
         strcpy ( usuario[usuario_para_alterar].rede_social, usuario_alterar.rede_social );


        
        }else if(confimar_acao == 'n'){
            printf("NUMERO NÃO ALTERADO, MENO OLHA ISSO AI \n");
        
        }
        //printf("%c",confimar_acao);



 
     fclose(arquivo);
     arquivo = NULL;

    

}

void excluirContatos(contato usuario)
{
     setlocale(LC_ALL,"");

        char confimar;
        int numero_excluir;

     printf("DIGITE QUAL NUMERO DESEJA EXCLUIR. \n");
     scanf("%i", &numero_excluir);
     fflush(stdin);
     printf("CONFIMAR??( S/N ) \n");
     scanf("%c", &confimar);
     confimar = tolower(confimar);


     if( confimar == 's')
     {
         printf("NUMERO APAGADO DA SUA VIDA :3 \n");
     } else {
         printf("DESISTIU FOI?? HMM >-<");
     }


}

void gravarArquivo(contato usuario[100], int nContatos){

           // Criação do Arquivo e abertura do arquivo
       
        FILE *ptrArquivo = NULL;
        ptrArquivo = fopen ("agendinha-da-depressaum.txt", "a");

            if(ptrArquivo == NULL){

                printf("Algo deu errado..");
                return;
            }

        for(int l = 0; l < nContatos; l++)
            {
                fprintf(ptrArquivo, "%s; %s; %s; %s; %s;\n", 
                usuario[l].nome_contato,
                usuario[l].endereco,
                usuario[l].telefone,
                usuario[l].email,
                usuario[l].rede_social );
            }
        
        fclose(ptrArquivo);
        ptrArquivo = NULL;
}



int lerArquivo(){

        // Criação do Arquivo e abertura do arquivo

        char *token;
       

        int total = 0;
        FILE *ptrArquivo = NULL;
        ptrArquivo = fopen ("agendinha-da-depressaum.txt", "r");
        if(ptrArquivo == NULL){
            printf("Algo deu errado..");
            return;
        }


    while( (fgets(linha, sizeof(linha), arquivo) ) != NULL){

        token = strtok(linha, ";");


        strcpy(agenda[total].nome, token);

        token = strtok(NULL, ";");

        token = strtok(NULL, ";");

        token = strtok(NULL, ";");

        total++;
    }

            
            
        fclose(ptrArquivo);
        ptrArquivo = NULL;

        return total;
}
//Autor TeusVieira&AliohS
